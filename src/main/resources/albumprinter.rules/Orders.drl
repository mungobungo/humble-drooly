package albumprinter.rules

import java.util.List


declare IsSmallOrderLine
    orderLine : OrderLine
end

declare IsMediumOrderLine
    orderLine: OrderLine
end

declare IsLargeOrderLine
    orderLine: OrderLine
end
    dialect "mvel"
/*
 * OrderLine is small
 */

rule "Order line  amount  Small, discount 5%"

    when
        $ol: OrderLine(Amount >= 10 && Amount <100)
    then
        System.out.println("OrderLine " +$ol.Product().Description() +  ", amount: "+ $ol.Amount +  " is small.");
        insertLogical(new IsSmallOrderLine($ol));

        $ol.Discounts.add(new Discount("SizeSmall", "amount > 10, discount 5%, price change: ", $ol.InitialPrice * 0.05));

end

rule "Order line amount medium, discount 10%"
    when
        $ol: OrderLine(Amount>= 100 && Amount <300)
    then
        System.out.println("OrderLine '" + $ol.Product().Description()  +  ", amount: "+ $ol.Amount +    "' is medium.");
        insertLogical(new IsMediumOrderLine($ol));
        $ol.Discounts.add(new Discount("AmountMedium", "amount > 100, discount 10%, price change: ", $ol.InitialPrice * 0.1));

end


rule "Order line size is large "
    when
        $ol: OrderLine(Amount>= 300)
    then
        System.out.println("OrderLine '" +$ol.Product().Description()  +  ", amount: "+ $ol.Amount +   "' is large.");

        insertLogical(new IsLargeOrderLine($ol));
       $ol.Discounts.add(new Discount("AmountLarge", "amount > 300, discount 15%, price change: ", $ol.InitialPrice * 0.15));

end

rule "aluminium wall decor gets 10% additional discount"
    when
        $ol: OrderLine(Product.Pap == "PAP_301")
    then
        System.out.println("OrderLine '" + $ol.Product.Description +  "' gets additional discount for aluminium.");

        $ol.Discounts.add(new Discount("AluminiumWallDecor", "aluminium wall decor, discount 10%,  price change: ", $ol.InitialPrice * 0.1));
end

rule "order with more that 5 order lines should get 10% discount"
    when
        $o: Order( OrderLines().size() > 5)

    then
        $o.Discounts.add(new Discount("BigOrderDiscount", ">5 order lines, discount 10%,  price change: ", $o.InitialPrice * 0.1));
end


rule "order with user Oleg gets 20% discount"
    when
        $o: Order()
        $user: User(Name == "Oleg")
    then
        $o.Discounts.add(new Discount("NameDiscount", "name Oleg, discount 20%,  price change: ", $o.InitialPrice * 0.2));
end
